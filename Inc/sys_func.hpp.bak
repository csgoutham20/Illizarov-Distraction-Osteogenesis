#ifndef __SYS_FUNC__
#define __SYS_FUNC__

#include "main.h"
#include "sys_init.h"
#include <iostream>

#define A 0
#define B 1
#define C 2
#define D 3

#define MOTOR_1_PORT GPIOA

#define MOTOR_1_PIN_A GPIO_PIN_8
#define MOTOR_1_PIN_B GPIO_PIN_10

#define MOTOR_2_PIN_A GPIO_PIN_
#define MOTOR_2_PIN_B GPIO_PIN_

#define MOTOR_3_PIN_A GPIO_PIN_
#define MOTOR_3_PIN_B GPIO_PIN_

#define MOTOR_4_PIN_A GPIO_PIN_
#define MOTOR_4_PIN_B GPIO_PIN_

#define ENCODER_1_PIN_A_PORT GPIOA
#define ENCODER_1_PIN_A GPIO_PIN_15
#define ENCODER_1_PIN_B_PORT GPIOB
#define ENCODER_1_PIN_B GPIO_PIN_3

#define ENCODER_2_PORT GPIOA
#define ENCODER_2_PIN_A GPIO_PIN_6
#define ENCODER_2_PIN_B GPIO_PIN_7

#define ENCODER_3_PORT GPIOB
#define ENCODER_3_PIN_A GPIO_PIN_6
#define ENCODER_3_PIN_B GPIO_PIN_7

#define ENCODER_4_PORT GPIOA
#define ENCODER_4_PIN_A GPIO_PIN_0
#define ENCODER_4_PIN_B GPIO_PIN_1

void EnterStandByMode(void);
void ExitStandByMode(void);
void UpdateDemand(void);
void DemandChanged(void);
uint32_t absolute(int32_t value);
void start_motor(uint32_t motor, uint32_t direction);
void stop_motor(uint32_t motor);
void StringCopy(uint64_t *dest, uint64_t *src, uint32_t start, uint32_t count);

class Motor_func;

#endif
